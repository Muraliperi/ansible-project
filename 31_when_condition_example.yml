---
- hosts: localhost
  tasks:
    - name: Run with item greater than 5
      command: echo "{{ item }}"
      loop: [0, 2, 3, 4, 5, 6, 7, 9]
      when: item > 5
      
    - name: Start apache2 service
      service:
        name: httpd
        state: started
      register: service_status
      ignore_errors: true
      
    - name: Fail with custom message if httpd service failed to start
      fail:
        msg: "Failed to start httpd service, check httpd service status and review logs"
      when: service_status.failed
      
---
- name: Start http if postfix active
  hosts: centosstream7
  tasks:
    - name: Check postfix status
      command: /usr/bin/systemctl is-active postfix
      ignore_errors: true
      register: result

    - name: Start httpd if postfix is activity
      service:
        name: httpd
        state: restarted
      when: result.rc == 0

---
- name: Validation for file existance
  hosts: localhost
  become: true

  vars:
     myfile: /tmp/validate.txt

  tasks:
    - name: Check if file exists
      ansible.builtin.stat:
        path: "{{ myfile }}"
      register: file_data

    - name: Print if file exists
      ansible.builtin.debug:
        msg: "{{ myfile }} file is exists"
      when: file_data.stat.exists

    - name: Print if file doesn't exists
      ansible.builtin.debug:
        msg: "{{ myfile }} file doesn't exist"
      when: not file_data.stat.exists
      
---
- name: Validate directory status using stat module
  hosts: localhost
  vars:
    dir_name: /tmp/muralip

  tasks:
    - name: Validate if {{ dir_name }} exist
      ansible.builtin.stat:
        path: "{{ dir_name }}"
      register: dir_status

    - name: The {{ dir_name }} is exists
      ansible.builtin.debug:
        msg: "The {{ dir_name }} does exists"
      when: dir_status.stat.isdir is defined and dir_status.stat.isdir

    - name: The {{ dir_name }} doesn't exists
      ansible.builtin.debug:
        msg: "The {{ dir_name }} doesn't exist"
      when: dir_status.stat.isdir is not defined

---
- name: Checking contents of a directory
  hosts: localhost
  become: true
  vars:
    mydir: /root/backup

  tasks:
    - name: Checking contents of "{{ mydir }}"
      ansible.builtin.shell: ls -l {{ mydir }}
      register: backup_content

    - name: Directory "{{ mydir }}" is empty
      ansible.builtin.debug:
        msg: "The {{ mydir }} is empty"
      when: backup_content.stdout == "total 0"

    - name: Directory "{{ mydir }}" contains below files and folders
      ansible.builtin.debug:
        msg: "{{ backup_content.stdout.split('\n') }}"
      when: backup_content.stdout != "total 0"

---
- name: When condition demo
  hosts: localhost

  tasks:
    - name: Fetching uptime details
      ansible.builtin.shell: uptime
      register: uptime_output

    - name: Printing debug message
      ansible.builtin.debug:
        msg: "{{ uptime_output.stdout }}"
      when: ansible_distribution == "CentOS"
---
- name: Conditional statement
  hosts: localhost
  gather_facts: False

  vars:
    x: 4
    y: 78
    z: [1, 4, 89, 100]

  tasks:
    - name: Check if x == y ?
      debug:
        msg: "{{x}} is equal to {{y}}"
      when: x==y

    - name: Check if x is in z
      debug:
        msg: "x is in z: {{x}} is in {{z}}"
      when: x in z


---
- name: Install a package
  hosts: localhost

  vars:
    my_task: true

  tasks:
    - name: Install postfix package on the host
      yum:
        name: postfix
        state: present
      when: my_task
[tom@ansible-control-node when_condition]$
