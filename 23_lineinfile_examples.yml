---
- name: Guided practice
  hosts: centosstream7, rockylinux9
  tasks:
     - name: Add a line to /tmp/testloop.yml file
      lineinfile:
        path: /tmp/testloop.yml
        line: 'This line added from Ansible playbook'
        state: present
        
     - name: Editing ssh config file and replacing PasswordAuthentication from "no" to "yes"
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        state: present
        line: PasswordAuthentication yes
        validate: 'sshd -t -f %s'
        notify:
          - Restarting sshd

  handlers:
    - name: Restarting sshd
      service:
        name: sshd
        state: restarted
---
- name: Search a string in a file
  hosts: localhost
  vars:
    mypath: "/etc/ssh/sshd_config"
    mystring: "PasswordAuthentication no"

  tasks:
    - name: Find {{ mystring }} in ssh config file
      ansible.builtin.lineinfile:
        path: "{{ mypath }}"
        line: "{{ mystring }}"
        state: present
      check_mode: true
      register: conf
      failed_when: (conf is failed) or (conf is changed)
---
- name: Commenting a line in the file
  hosts: localhost
  vars:
    mypath: /etc/postfix/main.cf
    my_regex: '(^daemon_directory .*)'

  tasks:
    - name: Commentout a line
      ansible.builtin.lineinfile:
        path: "{{ mypath }}"
        regexp: "{{ my_regex }}"
        line: '# \1'
        backrefs: yes
        state: present
        backup: yes
---
- name: Insert line before using lineinfile.
  hosts: localhost
  vars:
    mypath: /etc/postfix/main.cf
    my_regex: "^# directory must be owned by root"
    inseartbefore_line: "# daemon_directory .*"
    new_line: "ServerAdmin murali@admin.com"

  tasks:
    - name: Commentout a line
      ansible.builtin.lineinfile:
        path: "{{ mypath }}"
        regexp: "{{ my_regex }}"
        insertbefore: "{{ inseartbefore_line }}"
        line: "{{ new_line }}"
        state: present
        backup: yes
---
- name: Delete a line
  hosts: localhost
  tasks:
    - name: Delete a line
      ansible.builtin.lineinfile:
        path: /etc/postfix/main.cf
        # The below line will be deleted
        regexp: "html_directory = yes"
        state: absent
        backup: yes


---
- name: Commenting a line in the file
  hosts: localhost
  vars:
    mypath: /etc/postfix/main.cf
    from_line: "html_directory = no"
    to_line: "html_directory = yes"

  tasks:
    - name: Commentout a line
      ansible.builtin.lineinfile:
        path: "{{ mypath }}"
        # The string to search
        regexp: "{{ from_line }}"
        # The string to replace with
        line: "{{ to_line }}"
        state: present
        backup: yes

    - name: replace line which starts with bind-address
      lineinfile:
        dest: /etc/mysql/my.cnf
        regexp: ^bind-address
        line: "bind-address = 0.0.0.0"

---
- name: Adding tom user in sudoers
  hosts: rockylinux9, centosstream7
  vars:
    lines: "tom         ALL=(ALL)       NOPASSWD: ALL"
    passwd: "$*************encrypted_password_from_/etc/shadow_file********************"
  tasks:
    - name: Creating a group
      group:
        name: ansgrp
        state: present

    - name: Creating tom user
      user:
        name: tom
        group: ansgrp
        password: "{{ passwd }}"
        state: present
        comment: Ansible practice user

    - name: Updating sudoers file
      lineinfile:
        line: "{{ lines }}"
        path: /etc/sudoers
        state: present
