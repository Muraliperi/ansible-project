---
- hosts: localhost

  tasks:
    - name: Copy file test.txt
      copy:
        src: test.txt
        dest: /root/abc.txt

    - name: Fetch fdisk output
      shell: "fdisk -l | awk '/sd/' |grep Disk | awk '{print $2}'| tr -d ':'"
      register: drivers_data

    - name: Fetch /dev/sda size
      shell: "fdisk -l | grep sd | awk '/Disk/' | awk '{print $3 $4}' | tr -d ','"
      register: devsda_size

    - name: Displays output
      debug:
        var: devsda_size.stdout

    - name: Fetch bash version
      shell: "bash --version"
      register: bash_out

    - set_fact:
        bash_version: "{{ bash_out.stdout.split('\n')[0].split(' ')[3] }}"  # Creating "bash_version" variable using set_fact which can be used in jinja template.

    - name: Write /root/abc.txt file when sdb drive available
      template:
        src: templates/abc.txt2.j2
        dest: /root/abc.txt
      when: "'/dev/sdb' in drivers_data.stdout"

    - name: Write /root/abc.txt file when sdb drive not available
      template:
        src: templates/abc.txt.j2
        dest: /root/abc.txt
      when: "'/dev/sdb' not in drivers_data.stdout"
      
[root@ansible-control-node playbooks]# cat templates/abc.txt.j2
HOST= {{ ansible_hostname }}
MEMORY= {{ ansible_facts['memtotal_mb'] }}
BIOS= {{ ansible_bios_version }}
VDA_DISK_SIZE= {{ ansible_facts['devices']['sda']['size'] }}
VDB_DISK_SIZE= "NONE"
BASH_VERSION={{ bash_version }}
[root@ansible-control-node playbooks]#
[root@ansible-control-node playbooks]# cat templates/abc.txt2.j2
HOST= {{ ansible_hostname }}
MEMORY= {{ ansible_facts['memtotal_mb'] }}
BIOS= {{ ansible_bios_version }}
VDA_DISK_SIZE= {{ ansible_facts['devices']['sda']['size'] }}
VDB_DISK_SIZE= {{ ansible_facts['devices']['sdb']['size'] }}
BASH_VERSION={{ bash_version }}
[root@ansible-control-node playbooks]#
