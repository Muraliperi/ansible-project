---
- name: Configuring logrotation for auditd
  hosts: all
  become: yes

  vars:
    audit_conf: /etc/audit/auditd.conf
    audit_log_dir: /var/log/audit
    r9_conf: /home/root/r9auditd.conf
    r8_conf: /home/root/r8auditd.conf

  tasks:
    - block:
      - name: Find Files ends with audit.log.51...150 range for R8
        find:
          paths: "{{ audit_log_dir}}"
          patterns: 'audit\.log\.(5[1-9]|[6-9][0-9]|1[0-4][0-9]|150)$'
          use_regex: yes
          file_type: file
        register: old_files

      - name: Removing Found files for R8
        file:
          path: "{{ item.path }}"
          state: absent
        with_items: "{{ old_files.files }}"

      - name: Check if auditd.conf file exists for R8
        ansible.builtin.stat:
          path: "{{ audit_conf }}"
        register: file_data

      - name: Take backup of existing auditd.conf file for R8
        copy:
          src: "{{ audit_conf }}"
          dest: "{{ audit_conf }}_{{ansible_date_time.date}}_bkp"
          backup: yes
          remote_src: yes
        when: file_data.stat.exists

      - name: Fetch Auditd PID for R8
        command: pidof auditd
        register: auditd_pid

      - name: Copy file from Control node to R8 remote server
        copy:
          src: "{{ r8_conf }}"
          dest: "{{ audit_conf }}"
          owner: root
          group: root
          mode: '0640'
        when: file_data.stat.exists
        notify:
          - reload auditd config for rocky8
          - reload auditd logs for rocky8
      when: ansible_facts['distribution'] == "Rocky" and ansible_facts['distribution_major_version'] == "8"

    - block:
      - name: Find Files ends with audit.log.51...150 range for R9
        find:
          paths: "{{ audit_log_dir}}"
          patterns: 'audit\.log\.(5[1-9]|[6-9][0-9]|1[0-4][0-9]|150)$'
          use_regex: yes
          file_type: file
        register: old_files

      - name: Removing Found files for R9
        file:
          path: "{{ item.path }}"
          state: absent
        with_items: "{{ old_files.files }}"

      - name: Check if auditd.conf file exists for R9
        ansible.builtin.stat:
          path: "{{ audit_conf }}"
        register: file_data

      - name: Take backup of existing auditd.conf file for R9
        copy:
          src: "{{ audit_conf }}"
          dest: "{{ audit_conf }}_{{ansible_date_time.date}}_bkp"
          backup: yes
          remote_src: yes
        when: file_data.stat.exists

      - name: Fetch Auditd PID for R9
        command: pidof auditd
        register: auditd_pid2

      - name: Copy file from Control node to R8 remote server
        copy:
          src: "{{ r9_conf }}"
          dest: "{{ audit_conf }}"
          owner: root
          group: root
          mode: '0640'
        when: file_data.stat.exists
        notify:
          - reload auditd config for rocky9
          - reload auditd logs for rocky9
      when: ansible_facts['distribution'] == "Rocky" and ansible_facts['distribution_major_version'] == "9"
  handlers:
    - name: reload auditd config for rocky8
      shell: "kill -HUP {{ auditd_pid.stdout }}"
      when: (auditd_pid.stdout is defined) and (ansible_facts['distribution'] == "Rocky" and ansible_facts['distribution_major_version'] == "8")
    - name: reload auditd logs for rocky8
      shell: "kill -USR1 {{ auditd_pid.stdout }}"
      when: (auditd_pid.stdout is defined) and (ansible_facts['distribution'] == "Rocky" and ansible_facts['distribution_major_version'] == "8")
    - name: reload auditd config for rocky9
      shell: "kill -HUP {{ auditd_pid2.stdout }}"
      when: (auditd_pid.stdout is defined) and (ansible_facts['distribution'] == "Rocky" and ansible_facts['distribution_major_version'] == "9")
    - name: reload auditd logs for rocky9
      shell: "kill -USR1 {{ auditd_pid2.stdout }}"
      when: (auditd_pid.stdout is defined) and (ansible_facts['distribution'] == "Rocky" and ansible_facts['distribution_major_version'] == "9")
