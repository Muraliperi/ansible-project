#######################################################################################
# If condition
[root@ansible-control-node playbooks]# cat ./templates/if_condition.j2
{% if x > y %}
x is greater than y
{% endif %}
#######################################################################################
# If, else - Part1
[root@ansible-control-node playbooks]# cat ./templates/else_if_condition.j2
{% if x > y %}
X is greater than Y
{% else %}
Y is greater than X
{% endif %}
[root@ansible-control-node playbooks]#
---------------------------------------------------------------------------
# If, else - Part2
Total Memory: {{ ansible_memtotal_mb }}
{% if ansible_memtotal_mb > 100 %}
Memory is LARGE
{% else %}
Memory is SMALL
{% endif %}
#######################################################################################
# if, elif, else
[root@ansible-control-node playbooks]# cat ./templates/elif_condition.j2
{% if x > y %}
x is greater. The value of x is: {{x}}
{% elif y > x %}
y is greater. The value of y is: {{y}}
{% else %}
x and y values are equal. The value of x is: {{x}} The value of y is: {{y}}
{% endif %}
[root@ansible-control-node playbooks]#
#######################################################################################
# For Loop
{% for host in groups['all'] %}
{{ hostvars[host]['ansible_facts']['default_ipv4']['address']}} {{ hostvars[host]['ansible_facts']['hostname'] }}
{% endfor %}
#######################################################################################
#Filter
{% for item in users_detail%}
{% if item.role == 'admin' %}
hello {{ item.name | upper }}, you are the Administrator !!
{% else %}
Hello, {{ item.name }}.
{% endif %}
{% endfor %}
#######################################################################################
# Inheritance
[root@ansible-control-node playbooks]# cat ./base.j2
<html>
<head><title>{{ title }}</title></head>
<body>
{% block content %}{% endblock %}
</body>
</html>
[root@ansible-control-node playbooks]# cat ./child.j2
{% extends 'base.j2' %}                                      --> This is inherited from base.j2
{% block content %}
<h1>Welcome to {{ title }}</h1>
{% endblock %}
[root@ansible-control-node playbooks]#
#######################################################################################
# Jinja inside tasks
- name: Debug tasks Jinja2
  ansible.builtin.debug:
    msg: |
         {% for user in user_detail %}
         | {{user.name }} | {{ user.age }} |
         {% endfor %}
-------------------------------------------------------------------------------------------------------------
#You can use Jinja2 templating within Ansible tasks to handle conditional logic with if, elif, and else statements. 
#Here's an example of how you can assign different values to a variable based on conditions:
- name: Assign values based on conditions
  set_fact:
    my_variable: >-
      {% if condition1 %}
        value1
      {% elif condition2 %}
        value2
      {% else %}
        value3
      {% endif %}
# Or we can follow this approach
- name: Set value using inline Jinja
  set_fact:
    my_var: "{{ 'Value for one' if my_input == 'one' else 'Value for two' if my_input == 'two' else 'Default value' }}"
# Dynamic File Paths Based on Environment
- name: Set config path based on environment
  set_fact:
    config_path: >-
      {% if env == 'prod' %}
        /etc/myapp/prod/config.yaml
      {% elif env == 'staging' %}
        /etc/myapp/staging/config.yaml
      {% else %}
        /etc/myapp/dev/config.yaml
      {% endif %}
# Service Port Mapping Based on Role or Application
- name: Assign service port dynamically
  set_fact:
    service_port: >-
      {% if app_name == 'web' %}
        80
      {% elif app_name == 'api' %}
        8080
      {% else %}
        3000
      {% endif %}
#  Select Package List Based on OS Family
- name: Set package list for installation
  set_fact:
    packages: >-
      {% if ansible_os_family == 'Debian' %}
        ['nginx', 'curl']
      {% elif ansible_os_family == 'RedHat' %}
        ['httpd', 'curl']
      {% else %}
        []
      {% endif %}
# Hostname Formatting Based on Index or Host Variables
- name: Set formatted hostname
  set_fact:
    new_hostname: "{{ inventory_hostname | regex_replace('\\..*', '') | upper }}-NODE"
# Conditional IP Selection (Public/Private based on flag)
- name: Select IP based on use_private variable
  set_fact:
    target_ip: "{{ hostvars[inventory_hostname]['ansible_' + (use_private | ternary('eth1', 'eth0'))]['ipv4']['address'] }}"
# Template Variable in File Name or Path
- name: Copy environment specific config file
  template:
    src: "config-{{ env }}.j2"
    dest: "/etc/myapp/config.yaml"
# 

--------------------------------------------------------------------------------------------------------------
[root@ansible-control-node ansible-trainings]# cat config.j2
# config.j2
{% if env == 'production' %}
server_name: prod.example.com
{% elif env == 'staging' %}
server_name: staging.example.com
{% else %}
server_name: dev.example.com
{% endif %}
[root@ansible-control-node ansible-trainings]# cat jinja-practice.yml 
---
- name: Practicing Jinja Template
  hosts: localhost
  vars:
    env: production
  tasks:
    - name: Create configuration file 
      template: 
         src: config.j2
         dest: /tmp/jinja-config.txt
[root@ansible-control-node ansible-trainings]#
--------------------------------------------------------------------------------------------------------------
2. Looping with Conditions
- name: Process items with conditions
  set_fact:
    processed_items: >-
      {% for item in items %}
        {% if item.condition %}
          {{ item.value }}
        {% endif %}
      {% endfor %}
3. Conditional Package Installation
- name: Install packages based on OS
  package:
    name: >-
      {% if ansible_os_family == 'Debian' %}
        apache2
      {% elif ansible_os_family == 'RedHat' %}
        httpd
      {% endif %}
    state: present
4. Dynamic Inventory
- name: Generate dynamic inventory
  add_host:
    name: "{{ item.name }}"
    groups: >-
      {% if item.role == 'web' %}
        webservers
      {% elif item.role == 'db' %}
        dbservers
      {% endif %}
  loop: "{{ inventory_items }}"
5. Conditional Task Execution
- name: Conditional task execution
  command: "{{ item.command }}"
  when: item.condition
  loop:
    - { command: 'echo Hello', condition: true }
    - { command: 'echo World', condition: false }

